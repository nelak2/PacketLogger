BNES // Echo send
66 78 	// 2 bytes protocol type
69 83 	// 2 bytes message type
255 19	// 2 byte client port (not used)
0 	// 1 byte unknown
0 	// 1 byte comes back in BNER

BNER // Echo reply
66 78 	// 2 bytes protocol type
69 82	// 2 bytes message type
85 	// 1 byte unknown
2 20	// 2 bytes server port (not used)
0 	// 1 byte = last byte of BNER
8 	// 1 byte string length
Server12 // X bytes server name (X = previous byte)

BNXI // Extra info request
66 78 	// 2 bytes protocol type
88 73 	// 2 bytes message type
255 19 	// 2 bytes client port

BNXR // Extra info reply
66 78 	// 2 bytes protocol type
88 82 	// 2 bytes message type
2 20 	// 2 bytes server port
253 0 	// 2 bytes unknown
1 40 	// 2 bytes. Levels 1 to 40?
0 6 	// 2 bytes. 0 players/6 max players
1 	// allow local characters
1 	// pvp mode (0 = None, 1 = Party, 2 = Full, 3 = default)
0 	// player pause enabled
1 	// only one party
1 	// enforce legal characters
0 	// item level restrictions
0 	// unknown
8 	// 1 byte string length
Chapter1 // X bytes module name

Where is Difficulty, AutoSave Interval (minutes), Game Type, PvP Setting, Password required?

BNLM // Link alive?
66 78 	// 2 bytes protocol type
76 77 	// 2 bytes message type
255 19	// 2 bytes client port
3 	// Starts at 3 and packets keep sending until it == 1
0 0 0 	// 3 bytes buffer

BNLR // Link reply
66 78 	// 2 bytes protocol type
76 82 	// 2 bytes message type
2 20 	// 2 bytes server port
3 	// Starts at 3 and packets keep sending until it == 1
0 0 0 	// 3 bytes buffer

BNDS // Description send
2 bytes // protocol type
2 bytes // message type
2 bytes // client port

BNDR // Description reply
2 bytes // protocol type
2 bytes // message type
2 bytes // server port
1 byte  // string length - server description
3 bytes // 00's buffer
X bytes // server description string
1 byte  // string length - module description
3 bytes // 00's buffer
Y bytes // module description
1 byte  // string length - server version (generally 4 as version numbers no longer change)
3 bytes // 00's buffer
Z bytes // server version string
2 bytes // 00's buffer
(note regarding all 3 strings: having no description still causes 4 bytes written as 00's. 00 string length, 00 00 00 buffer)

BNCS // Connect send
66 78 	// 2 byte protocol type
67 83 	// 2 byte message type
255 19	// 2 byte client port
16 173 31 0 0 3 0 0 34 208 200 5 // 12 bytes unknown
1 byte 	// player name length
X bytes // player name
1 byte 	// CD key hash length
Y bytes // CD key hash

SendBNCSMessage(ulong, uchar, int, int, String, String, ulong &
HandleBNCS(ulong, uchar *, ulong)

BNCR // Connect reply
66 78 	// 2 byte protocol type
67 82 	// 2 byte message type
2 20  	// 2 byte server port

>> 0000:                   56 20 cc 32 23 39 d9 be b8 8d  BNCR..V..2#9....
>> 0010: 32 c3 ab ac 99 8a 0b 8f b5 29 36 dd de b6 93 73  2........)6....s
>> 0020: 45 96 aa 2e 41 0e 0a 25 20 f6 21 de 21 bf cb de  E...A..%..!.!...
>> 0030: f8 83 05 c1 7a 53 c9 d3 56 d9 a5 f7 83 6d 67 bc  ....zS..V....mg.
>> 0040: f4 1c 09 99 e3 01 a8 0c 64                       ........d

>> 0000:                   56 20 a4 82 d5 8b e5 1c 70 25  BNCR..V.......p%
>> 0010: 7d bc 8a 50 53 28 1d 40 53 7d d6 92 f2 d6 c3 bc  }..PS(.@S}......
>> 0020: 63 af 87 c4 50 76 02 f6 20 84 6e fc 5b 85 3a 6e  c...Pv....n.[.:n
>> 0030: 66 e1 d1 16 6b fc 77 44 14 4b 0b 1f 10 7c 29 b2  f...k.wD.K...|).
>> 0040: 31 12 77 df fa fc a1 29 d4                       1.w....).

SendBNCR(ulong, uchar, ulong)
HandleBNCR(ulong, uchar *, ulong)

BNVS
3 CD Key 8 hashes + 3 MD5 hashes

2 bytes protocol
2 bytes message type
2 bytes unknown (doesn't seem to be port like in all previous)
1 byte ASCII ( Acts as delimiter (hex 28)
8 bytes CD Key Hash 1
32 bytes MD5 Hash
1 byte ASCII ( delimiter (hex 28)
8 bytes CD Key Hash 2
32 bytes MD5 Hash
1 byte ASCII ( delimiter (hex 28)
8 bytes CD Key Hash 3
32 bytes MD5 Hash
1 byte ASCII . delimiter (hex 20)
32 byte MD5 Hash

SendBNVS(CExoArraylist<CExoString> const *, CExoString const &, CExoString const &)
HandleBNVS(ulong, uchar *, ulong)


BNVR
2 bytes protocol type
2 bytes message type
41 57 1b 5c 0b  // 5 bytes unknown

