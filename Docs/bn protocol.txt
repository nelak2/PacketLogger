BNES
66 78 // 2 bytes protocol type
69 83 // 2 bytes message type
255 // 1 byte unknown but appears to be ? in query messages
19 // 1 byte unknown
0 // 1 byte comes back in BNER

BNER
66 78 // 2 bytes protocol type
69 82// 2 bytes message type
85 // 1 byte unknown
2 20// 2 bytes unknown
0 // 1 byte = last byte of BNER
8 // 1 byte string length
Server12 // X bytes server name (X = previous byte)

BNXI
66 78 // 2 bytes protocol type
88 73 // 2 bytes message type
255 // 1 byte unknown but is ascii ? and messages seem to be query
19 // 1 bytes unknown

BNXR
66 78 // 2 bytes protocol type
88 82 // 2 bytes message type
2 20 // 2 bytes unknown but see BNER. Curiously no preceding 85
253 0 // 2 bytes unknown
1 40 // 2 bytes. Levels 1 to 40?
0 6 // 2 bytes. 0 players/6 max players
1 1 0 1 1 0 0 // 7 bytes. Check box server options. local characters allowed, enforce legal characters, item level restriction, only one party, player pause enable, reload when empty, post game to internet
8 // 1 byte string length
Chapter1 // X bytes module name

Where is Difficulty, AutoSave Interval (minutes), Game Type, PvP Setting, Password required?

BNLM
66 78 // 2 bytes protocol type
76 77 // 2 bytes message type
255 // 1 byte unknown but is ascii ? and messages seem to be query
19 // 1 byte unknown
3 // Starts at 3 and packets keep sending until it == 1
0 0 0 // 3 bytes unknown

BNLR
66 78 // 2 bytes protocol type
76 82 // 2 bytes message type
2 20 // 2 bytes unknown but see BNER. Curiously no preceding 85
3 // Starts at 3 and packets keep sending until it == 1
0 0 0 // 3 bytes unknown

How does it decipher server version? I suspect that the 2 20, and the 255 19 might be version identifiers
Server version is reported as a .8109, potentially a floating point value when sent over network hence 2 20 instead of 81 09

